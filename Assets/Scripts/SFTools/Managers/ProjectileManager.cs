//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using SF_Tools.Weapons;
using System.Collections.Generic;
using UnityEngine;

namespace SF_Tools.Managers
{
    public class ProjectileManager
	{
		#region Private Members

		private List<Projectile> projectiles = new List<Projectile>();
		private static ProjectileManager instance = null;

		#endregion

		#region Private Routines

		private ProjectileManager ()
		{
		}

		#endregion

		#region Public Properties

		public static ProjectileManager Instance
		{
			get 
			{
				if(instance == null)
					instance = new ProjectileManager();
				
				return instance;
			}
		}

		#endregion

		#region Public Interface

		public Projectile[] GetProjectiles(int numProjectiles, GameObject projType)
		{
			List<Projectile> newProjs = new List<Projectile>();

			GameObject newProj;
			Projectile newComp;

			for(int i = 0; i < numProjectiles; ++i)
			{
				newProj = (GameObject)GameObject.Instantiate(projType);
				newComp = newProj.GetComponent<Projectile>();
				newProjs.Add(newComp);
				projectiles.Add(newComp);
			}

			return newProjs.ToArray();	
		}

		public void RemoveProjectiles(Projectile[] objs)
		{
			foreach(Projectile obj in objs)
			{
				projectiles.Remove(obj);

				if(obj != null)
					GameObject.Destroy(obj.gameObject);
			}
		}

		public void Update()
		{
		}

		#endregion
	}
}

